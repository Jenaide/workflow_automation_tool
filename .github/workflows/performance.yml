name: Performance Tests

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 3'  # Run weekly on Wednesdays

jobs:
  lighthouse:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Start application
        run: npm start &
        env:
          PORT: 3000

      - name: Wait for application to start
        run: sleep 5

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: |
            http://localhost:3000
            http://localhost:3000/workflows
            http://localhost:3000/tasks
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const results = JSON.parse(fs.readFileSync('lighthouse-results.json', 'utf8'));
            
            let scoreTable = '| URL | Performance | Accessibility | Best Practices | SEO |\n';
            scoreTable += '| --- | --- | --- | --- | --- |\n';
            
            results.forEach(result => {
              const url = result.url;
              const scores = result.summary;
              
              scoreTable += `| ${url} | ${scores.performance * 100} | ${scores.accessibility * 100} | ${scores.bestPractices * 100} | ${scores.seo * 100} |\n`;
            });
            
            return scoreTable;
          result-encoding: string

      - name: Create performance report issue
        if: github.event_name == 'schedule'
        uses: actions/github-script@v6
        with:
          script: |
            const date = new Date().toISOString().split('T')[0];
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Performance Report - ${date}`,
              body: `## Performance Report
              
              ${steps.format_lighthouse_score.outputs.result}
              
              [Detailed Lighthouse Results](${process.env.LIGHTHOUSE_RESULTS_URL})`
            });
        env:
          LIGHTHOUSE_RESULTS_URL: ${{ steps.lighthouse.outputs.links }}